<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
    <bean id="customerBean" class="cn.zw.spring.collections.Customer">
    	<!-- java.util.List -->
    	<property name="lists">
    		<list>
    			<value>1</value><!-- List属性既可以通过<value>注入字符串，也可以通过<ref>注入容器中其他的Bean -->
    			<ref bean="personBaen"/>
    			<value>2</value>
    			<bean class="cn.zw.spring.collections.Person">
    				<property name="name" value="zw"></property>
    				<property name="address" value="nj"></property>
    				<property name="age" value="23"></property>
    			</bean>
    		</list>
    	</property>
    	<!-- java.util.Set -->
    	<property name="sets">
    		<set>
    			<value>1</value><!-- set与list类似 -->
    			<ref bean="personBaen"/>
    			<bean class="cn.zw.spring.collections.Person">
    				<property name="name" value="zw"></property>
    				<property name="address" value="nj"></property>
    				<property name="age" value="23"></property>
    			</bean>
    		</set>
    	</property>
    	<!-- java.util.Map -->
    	<property name="maps">
    		<map>
    			<entry key="Key 1" value="1"></entry><!-- 一个entry就是一个Map元素 -->
    			<entry key="Key 2" value-ref="personBaen"></entry>
    			<entry key="Key 3">
    				<bean class="cn.zw.spring.collections.Person">
    					<property name="name" value="zw"></property>
    					<property name="address" value="nj"></property>
    					<property name="age" value="23"></property>
    				</bean>
    			</entry>
    		</map>
    	</property>
    	<!-- java.util.Properties -->
    	<!-- Properties类型类似于Map类型的特例，Map元素的键值可以对应任何类型的对象，但是Properties只能是字符串 -->
    	<property name="pros">
    		<props>
    			<prop key="admin">admin@nospam.com</prop>
    			<prop key="support">support@nospam.com</prop>
    		</props>
    	</property>
    </bean>
    <bean id="personBaen" class="cn.zw.spring.collections.Person">
    	<property name="name" value="zw"></property>
    	<property name="address" value="nj"></property>
    	<property name="age" value="23"></property>
    </bean>
</beans>